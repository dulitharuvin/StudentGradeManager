//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentGradeManager.CourseModuleServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseModuleServiceReference.ICourseModuleService")]
    public interface ICourseModuleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/SaveCourseModule", ReplyAction="http://tempuri.org/ICourseModuleService/SaveCourseModuleResponse")]
        int SaveCourseModule(StudentDataModel.CourseModule m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/SaveCourseModule", ReplyAction="http://tempuri.org/ICourseModuleService/SaveCourseModuleResponse")]
        System.Threading.Tasks.Task<int> SaveCourseModuleAsync(StudentDataModel.CourseModule m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetCourseModules", ReplyAction="http://tempuri.org/ICourseModuleService/GetCourseModulesResponse")]
        StudentDataModel.CourseModule[] GetCourseModules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetCourseModules", ReplyAction="http://tempuri.org/ICourseModuleService/GetCourseModulesResponse")]
        System.Threading.Tasks.Task<StudentDataModel.CourseModule[]> GetCourseModulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetModulesByCourse", ReplyAction="http://tempuri.org/ICourseModuleService/GetModulesByCourseResponse")]
        StudentDataModel.CourseModule[] GetModulesByCourse(StudentDataModel.Course m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetModulesByCourse", ReplyAction="http://tempuri.org/ICourseModuleService/GetModulesByCourseResponse")]
        System.Threading.Tasks.Task<StudentDataModel.CourseModule[]> GetModulesByCourseAsync(StudentDataModel.Course m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetModulesByCourseAndLevel", ReplyAction="http://tempuri.org/ICourseModuleService/GetModulesByCourseAndLevelResponse")]
        StudentDataModel.DTO.CourseModuleDTO[] GetModulesByCourseAndLevel(System.Guid courseId, int moduleLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseModuleService/GetModulesByCourseAndLevel", ReplyAction="http://tempuri.org/ICourseModuleService/GetModulesByCourseAndLevelResponse")]
        System.Threading.Tasks.Task<StudentDataModel.DTO.CourseModuleDTO[]> GetModulesByCourseAndLevelAsync(System.Guid courseId, int moduleLevel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseModuleServiceChannel : StudentGradeManager.CourseModuleServiceReference.ICourseModuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseModuleServiceClient : System.ServiceModel.ClientBase<StudentGradeManager.CourseModuleServiceReference.ICourseModuleService>, StudentGradeManager.CourseModuleServiceReference.ICourseModuleService {
        
        public CourseModuleServiceClient() {
        }
        
        public CourseModuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseModuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SaveCourseModule(StudentDataModel.CourseModule m) {
            return base.Channel.SaveCourseModule(m);
        }
        
        public System.Threading.Tasks.Task<int> SaveCourseModuleAsync(StudentDataModel.CourseModule m) {
            return base.Channel.SaveCourseModuleAsync(m);
        }
        
        public StudentDataModel.CourseModule[] GetCourseModules() {
            return base.Channel.GetCourseModules();
        }
        
        public System.Threading.Tasks.Task<StudentDataModel.CourseModule[]> GetCourseModulesAsync() {
            return base.Channel.GetCourseModulesAsync();
        }
        
        public StudentDataModel.CourseModule[] GetModulesByCourse(StudentDataModel.Course m) {
            return base.Channel.GetModulesByCourse(m);
        }
        
        public System.Threading.Tasks.Task<StudentDataModel.CourseModule[]> GetModulesByCourseAsync(StudentDataModel.Course m) {
            return base.Channel.GetModulesByCourseAsync(m);
        }
        
        public StudentDataModel.DTO.CourseModuleDTO[] GetModulesByCourseAndLevel(System.Guid courseId, int moduleLevel) {
            return base.Channel.GetModulesByCourseAndLevel(courseId, moduleLevel);
        }
        
        public System.Threading.Tasks.Task<StudentDataModel.DTO.CourseModuleDTO[]> GetModulesByCourseAndLevelAsync(System.Guid courseId, int moduleLevel) {
            return base.Channel.GetModulesByCourseAndLevelAsync(courseId, moduleLevel);
        }
    }
}
